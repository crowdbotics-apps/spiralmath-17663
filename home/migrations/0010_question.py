# Generated by Django 2.2.15 on 2020-09-23 05:32

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('home', '0009_auto_20200917_0618'),
    ]

    operations = [
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Value')),
                ('author_name', models.CharField(max_length=200, verbose_name='Author Name')),
                ('grade_level', models.CharField(max_length=3, verbose_name='Grade Level')),
                ('question_type', models.CharField(choices=[('mc', 'Multiple choice'), ('sa', 'Short answer'), ('la', 'Long answer'), ('t/f', 'True/False')], default='sa', max_length=100, verbose_name='Question type')),
                ('content_source', models.TextField(blank=True, null=True, verbose_name='Content source')),
                ('image', models.ImageField(blank=True, null=True, upload_to='home/static/questions_pictures', verbose_name='Image')),
                ('image_source', models.CharField(blank=True, max_length=250, null=True, verbose_name='Image source')),
                ('alt_text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Alt text')),
                ('mills_difficulty_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Mills difficulty level')),
                ('dok', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)], verbose_name='Depth of Knowledge')),
                ('copyright_status', models.TextField(blank=True, null=True, verbose_name='Copyright status')),
                ('question_style', models.CharField(choices=[('Word', 'Word'), ('Numeric', 'Numeric'), ('Graphic', 'Graphic')], default='Word', max_length=100, verbose_name='Question Style')),
                ('summative_status', models.BooleanField(default=False, verbose_name='Summative status')),
                ('approved_status', models.PositiveSmallIntegerField(choices=[(10, 'Pending'), (20, 'Approved'), (30, 'Rejected')], default=10, verbose_name='Approved status')),
                ('state_model', models.BooleanField(default=False, verbose_name='State-model')),
                ('author_memo', models.TextField(blank=True, null=True, verbose_name='Author memo')),
                ('standard_code', models.CharField(max_length=250, verbose_name='Standard code')),
                ('standard_set', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Standard set')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('reviewer_date', models.DateTimeField(auto_now=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.Creator')),
                ('reviewer_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', django.contrib.postgres.fields.jsonb.JSONField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.Question')),
            ],
        ),
    ]
